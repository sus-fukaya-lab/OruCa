map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen      80;
    listen [::]:80;
    server_name oruca_web;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~ ^/socket {
        # Docker内部のDNSサーバーを指定して、コンテナ名を解決できるようにする
        resolver 127.0.0.11 valid=30s;

        proxy_pass http://api:3000; # サービスAのdocker-compose.ymlで定義されたAPIサービス名
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
    }

    location ~ ^/api {
        # Docker内部のDNSサーバーを指定して、コンテナ名を解決できるようにする
        resolver 127.0.0.11 valid=30s;

        proxy_pass http://api:3000; # サービスAのdocker-compose.ymlで定義されたAPIサービス名
        proxy_set_header Host $host;
        # APIコンテナにクライアントの情報をより詳細に渡す
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # リバースプロキシでHTTPSを終端している場合に特に重要
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
